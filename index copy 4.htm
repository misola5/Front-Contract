<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>SimpleDEX Interacciones</title>
        <script src="https://cdn.jsdelivr.net/npm/web3@1.6.0/dist/web3.min.js"></script>
        <script src="https://cdn.tailwindcss.com"></script>
    </head>
    <body class="bg-gray-100 font-sans">
        <div class="container mx-auto p-6">
            <h1 class="text-4xl font-bold text-center text-gray-800 mb-6">Interacci√≥n con SimpleDEX</h1>
            <div class="text-center">
              <button id="btnConnect" class="bg-blue-500 text-white px-6 py-2 rounded-md hover:bg-blue-600 transition">Conectar Wallet</button>
              <button id="btnDisconnect" class="bg-red-500 text-white px-6 py-2 rounded-md hover:bg-red-600 transition mt-4" style="display:none;">Desconectar</button>
            </div>
            <p id="status" class="text-center text-gray-600 mt-4">Estado: Desconectado</p>

            <div id="liquidityFields" style="display:none;" class="bg-white p-6 rounded-lg shadow-md mt-6">
              <h2 class="text-2xl font-semibold text-gray-800 mb-4">Agregar Liquidez</h2>
              <label for="amountA" class="block text-gray-700">Cantidad de Token A:</label>
              <input type="number" id="amountA" placeholder="Cantidad de Token A" class="w-full mt-2 p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
              
              <label for="amountB" class="block text-gray-700 mt-4">Cantidad de Token B:</label>
              <input type="number" id="amountB" placeholder="Cantidad de Token B" class="w-full mt-2 p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
              
              <button id="btnAddLiquidity" class="bg-green-500 text-white px-6 py-2 rounded-md hover:bg-green-600 transition mt-4">Agregar Liquidez</button>
            </div> 

            <div id="exchangeFields" style="display:none;" class="bg-white p-6 rounded-lg shadow-md mt-6">
              <h2 class="text-2xl font-semibold text-gray-800 mb-4">Intercambiar Tokens</h2>
              <label for="amountToExchange" class="block text-gray-700">Cantidad a Intercambiar (Token A):</label>
              <input type="number" id="amountToExchange" placeholder="Cantidad de Token A" class="w-full mt-2 p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
              
              <button id="btnExchangeAtoB" class="bg-blue-500 text-white px-6 py-2 rounded-md hover:bg-blue-600 transition mt-4">Intercambiar Token A por B</button>
              <button id="btnExchangeBtoA" class="bg-blue-500 text-white px-6 py-2 rounded-md hover:bg-blue-600 transition mt-4">Intercambiar Token B por A</button>
            </div>
        </div>

        <script>
            let web3;
            let accounts;
            let simpleDexContract;
            const simpleDexAddress = "0xE77eB30A2745E075bbb83a54F6B7799CceC55c03";
            const simpleDexABI = [ /* ABI del contrato SimpleDEX */ ];

            const tokenAAddress = "0xF203047B80e86B79CfeA045fB598440754f314Bc";
            const tokenBAddress = "0x1d20C33b53565eDf63acDcFaC4d8FB85fc72d4CB";

            window.addEventListener('load', () => {
                if (window.ethereum) {
                    web3 = new Web3(window.ethereum);
                    ethereum.request({ method: 'eth_requestAccounts' }).then(accounts => {
                        window.accounts = accounts;
                        document.getElementById('btnConnect').style.display = 'none';
                        document.getElementById('btnDisconnect').style.display = 'block';
                        document.getElementById('status').textContent = `Conectado: ${accounts[0]}`;
                        simpleDexContract = new web3.eth.Contract(simpleDexABI, simpleDexAddress);
                        document.getElementById('liquidityFields').style.display = 'block';
                        document.getElementById('exchangeFields').style.display = 'block';
                    });
                } else {
                    alert("Por favor, instala MetaMask.");
                }
            });

            document.getElementById('btnConnect').onclick = async () => {
                await ethereum.request({ method: 'eth_requestAccounts' });
            };

            document.getElementById('btnDisconnect').onclick = async () => {
                window.accounts = null;
                simpleDexContract = null;
                document.getElementById('status').textContent = 'Desconectado';
                document.getElementById('btnConnect').style.display = 'block';
                document.getElementById('btnDisconnect').style.display = 'none';
                document.getElementById('liquidityFields').style.display = 'none';
                document.getElementById('exchangeFields').style.display = 'none';
            };

            document.getElementById('btnAddLiquidity').onclick = async () => {
                const amountA = document.getElementById('amountA').value;
                const amountB = document.getElementById('amountB').value;
                
                const tokenA = new web3.eth.Contract(ERC20ABI, tokenAAddress);
                const tokenB = new web3.eth.Contract(ERC20ABI, tokenBAddress);
                
                await tokenA.methods.approve(simpleDexAddress, web3.utils.toWei(amountA)).send({ from: accounts[0] });
                await tokenB.methods.approve(simpleDexAddress, web3.utils.toWei(amountB)).send({ from: accounts[0] });

                await simpleDexContract.methods.agregarLiquidez(web3.utils.toWei(amountA), web3.utils.toWei(amountB))
                    .send({ from: accounts[0] });
            };

            document.getElementById('btnExchangeAtoB').onclick = async () => {
                const amountA = document.getElementById('amountToExchange').value;
                await simpleDexContract.methods.intercambiarAporB(web3.utils.toWei(amountA))
                    .send({ from: accounts[0] });
            };

            document.getElementById('btnExchangeBtoA').onclick = async () => {
                const amountB = document.getElementById('amountToExchange').value;
                await simpleDexContract.methods.intercambiarBporA(web3.utils.toWei(amountB))
                    .send({ from: accounts[0] });
            };
        </script>
    </body>
</html>
